// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _3SDevTest.Data;

#nullable disable

namespace _3SDevTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231012160345_seedTableAddressAndGovernateAndCiry")]
    partial class seedTableAddressAndGovernateAndCiry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_3SDevTest.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingNumber")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("FlatNumber")
                        .HasColumnType("int");

                    b.Property<int>("GovernateId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GovernateId");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingNumber = 1,
                            CityId = 1,
                            FlatNumber = 1,
                            GovernateId = 1,
                            Street = "1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BuildingNumber = 2,
                            CityId = 2,
                            FlatNumber = 2,
                            GovernateId = 2,
                            Street = "2",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BuildingNumber = 3,
                            CityId = 3,
                            FlatNumber = 3,
                            GovernateId = 3,
                            Street = "3",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("_3SDevTest.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GovernateId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GovernateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GovernateId = 1,
                            Name = "City1Gove1"
                        },
                        new
                        {
                            Id = 2,
                            GovernateId = 1,
                            Name = "City2Gove1"
                        },
                        new
                        {
                            Id = 3,
                            GovernateId = 2,
                            Name = "City3Gove2"
                        });
                });

            modelBuilder.Entity("_3SDevTest.Models.Governate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Governates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Governate 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Governate 2"
                        });
                });

            modelBuilder.Entity("_3SDevTest.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ex@gmail.com",
                            FirstName = "FirstName1",
                            LastName = "LastName1",
                            MiddleName = "MiddleName1",
                            MobileNumber = "+021006158123"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2020, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ex@gmail.com",
                            FirstName = "FirstName2",
                            LastName = "LastName2",
                            MiddleName = "MiddleName2",
                            MobileNumber = "+022006258223"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2020, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ex@gmail.com",
                            FirstName = "FirstName3",
                            LastName = "LastName3",
                            MiddleName = "MiddleName3",
                            MobileNumber = "+023006358323"
                        });
                });

            modelBuilder.Entity("_3SDevTest.Models.Address", b =>
                {
                    b.HasOne("_3SDevTest.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_3SDevTest.Models.Governate", "Governate")
                        .WithMany()
                        .HasForeignKey("GovernateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_3SDevTest.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Governate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_3SDevTest.Models.City", b =>
                {
                    b.HasOne("_3SDevTest.Models.Governate", "Governate")
                        .WithMany()
                        .HasForeignKey("GovernateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Governate");
                });
#pragma warning restore 612, 618
        }
    }
}
